name: SafeAging CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  NODE_VERSION: '18.x'
  
jobs:
  # Security Scanning Job
  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run npm audit
        run: npm audit --production
        
      - name: Run security headers check
        run: |
          npm install -g @zaproxy/cli
          # Add OWASP ZAP security scanning here
          
  # Testing Job
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    needs: security
    
    strategy:
      matrix:
        test-suite: [unit, integration, e2e]
        
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: Install dependencies
        run: npm ci
        
      - name: Setup test database
        run: |
          npm run setup-db
          
      - name: Run ${{ matrix.test-suite }} tests
        run: npm run test:${{ matrix.test-suite }}
        env:
          JWT_SECRET: ${{ secrets.TEST_JWT_SECRET }}
          NODE_ENV: test
          
      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        if: matrix.test-suite == 'coverage'
        with:
          file: ./coverage/lcov.info
          
  # Build Job
  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build web application
        run: npm run build
        
      - name: Build mobile apps
        run: |
          npx cap sync
          # Additional mobile build steps here
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: dist/
          
  # HIPAA Compliance Check
  compliance:
    name: HIPAA Compliance Verification
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Check for PHI exposure
        run: |
          # Scan for potential PHI in logs
          grep -r "SSN\|DOB\|MRN" --include="*.js" --include="*.ts" . || echo "No PHI patterns found"
          
      - name: Verify encryption configuration
        run: |
          # Check for encryption settings
          grep -q "DATABASE_ENCRYPTION_KEY" .env.example || exit 1
          
      - name: Audit logging verification
        run: |
          # Verify audit logging is enabled
          grep -q "HIPAA_AUDIT_LOGGING=true" .env.example || exit 1
          
  # Deploy to Staging
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: [compliance]
    if: github.ref == 'refs/heads/develop'
    environment: staging
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Deploy to Cloudflare Pages (Staging)
        run: |
          npm install -g wrangler
          wrangler pages deploy dist --project-name=safeaging-staging
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          
  # Deploy to Production
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [compliance]
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Deploy to Cloudflare Pages (Production)
        run: |
          npm install -g wrangler
          wrangler pages deploy dist --project-name=safeaging
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          
      - name: Deploy mobile apps
        run: |
          # iOS App Store deployment
          # fastlane deliver --ipa path/to/app.ipa
          
          # Google Play Store deployment  
          # fastlane supply --apk path/to/app.apk
          
      - name: Post-deployment health check
        run: |
          curl -f https://safeaging.app/health || exit 1
          
      - name: Notify deployment status
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          text: 'Production deployment completed'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}